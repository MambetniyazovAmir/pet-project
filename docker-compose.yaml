version: '3'
services:
    balancer:
      build:
        context: ./balancer
        dockerfile: Dockerfile
      container_name: nginx-balancer
      # проброс портов
      ports:
        - "3000:3000"
      networks:
        - app-network

    #Контейнер с nginx, назовём его nginx
    nginx1:
      # Если нет секции build, то система будет искать образ в репозиториях
      build:
        context: ./nginx
        dockerfile: Dockerfile
      image: nginx # имя будущего образа
      container_name: nginx1 # имя контейнера после запуска
      ports:
        - "8080:80"
      volumes:
        - ./code:/data/mysite.local
      # мы можем создать для контейнеров внутреннюю сеть
      networks:
        - app-network

    #Контейнер с nginx2, назовём его app
    nginx2:
      # Если нет секции build, то система будет искать образ в репозиториях
      build:
        context: ./nginx
        dockerfile: Dockerfile
      image: nginx # имя будущего образа
      container_name: nginx2 # имя контейнера после запуска
      ports:
        - "8090:80"
      volumes:
        - ./code:/data/mysite.local
      # мы можем создать для контейнеров внутреннюю сеть
      networks:
        - app-network


    #Контейнер с nginx3, назовём его app
    nginx3:
      # Если нет секции build, то система будет искать образ в репозиториях
      build:
        context: ./nginx
        dockerfile: Dockerfile
      image: nginx # имя будущего образа
      container_name: nginx3 # имя контейнера после запуска
      ports:
        - "8070:80"
      volumes:
        - ./code:/data/mysite.local
      # мы можем создать для контейнеров внутреннюю сеть
      networks:
        - app-network

  #Контейнер с PHP-FPM, назовём его app
    app1:
      # Если нет секции build, то система будет искать образ в репозиториях
      build:
        context: ./fpm
        dockerfile: Dockerfile
      image: balance/php # имя будущего образа
      container_name: app1 # имя контейнера после запуска
      volumes:
        - ./code:/data/mysite.local
      # мы можем создать для контейнеров внутреннюю сеть
      networks:
        - app-network

  #Контейнер с PHP-FPM, назовём его app
    app2:
      # Если нет секции build, то система будет искать образ в репозиториях
      build:
        context: ./fpm
        dockerfile: Dockerfile
      image: balance/php # имя будущего образа
      container_name: app2 # имя контейнера после запуска
      volumes:
        - ./code:/data/mysite.local
      # мы можем создать для контейнеров внутреннюю сеть
      networks:
        - app-network

  #Контейнер с PHP-FPM, назовём его app
    app3:
      # Если нет секции build, то система будет искать образ в репозиториях
      build:
        context: ./fpm
        dockerfile: Dockerfile
      image: balance/php # имя будущего образа
      container_name: app3 # имя контейнера после запуска
      volumes:
        - ./code:/data/mysite.local
      # мы можем создать для контейнеров внутреннюю сеть
      networks:
        - app-network


#Docker Networks
networks:
      app-network:
        driver: bridge